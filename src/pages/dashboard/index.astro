---
import { getContent } from "@lib/data";
import Layout from "@layouts/Layout.astro";
import { formatDate } from "@lib/utils";

const datas = await getContent();
if (!datas) {
  return new Response(null, {
    status: 404,
    statusText: "No Data Found",
  });
}
---

<Layout pagesTitle="Dashboard">
  <h1 class="text-center text-3xl font-bold underline">Dashboard</h1>
  <section class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex items-center justify-between">
      <h2 class="text-xl font-bold">List of Contents</h2>
      <a
        href="/dashboard/create"
        class="py-1 px-2 inline-flex items-center rounded bg-deep-blue hover:bg-deep-blue/80 text-white"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="w-5 h-5 mr-1"
        >
          <path d="M5 12h14"></path>
          <path d="M12 5v14"></path>
        </svg>
        New
      </a>
    </div>
  </section>

  <section class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 mt-6">
    <div class="w-full flex items-center justify-between gap-1 mb-5">
      <table class="w-full text-sm text-left text-gray-500">
        <thead class="text-xs text-gray-700 uppercase bg-gray-100">
          <tr class="text-center">
            <th class="py-3 px-6">#</th>
            <th>Title</th>
            <th class="sm:table-cell hidden">Jenis Trip</th>
            <th class="sm:table-cell hidden">Created</th>
            <th class="sm:table-cell hidden">Updated</th>
            <th class="text-center">Actions</th>
          </tr>
        </thead>
        <tbody>
          {
            datas.length === 0 ? (
              <tr class="w-full text-center">
                <td colspan="6">No Data</td>
              </tr>
            ) : (
              datas.map((data: any, index: number) => (
                <tr class="border-b text-center">
                  <td>{index + 1}</td>
                  <td class="text-start">
                    <a href={`/trip/${data.slug}`} class="hover:underline">
                      {data.nama}
                    </a>
                  </td>
                  <td class="sm:table-cell hidden">{data.jenistrip}</td>
                  <td class="sm:table-cell hidden">
                    {formatDate(data.createdAt.toString())}
                  </td>
                  <td class="sm:table-cell hidden">
                    {formatDate(data.updatedAt.toString())}
                  </td>
                  <td class="flex flex-wrap items-center justify-center gap-1 py-1">
                    {/* Edit Button */}
                    <a
                      href={`/dashboard/edit/${data.slug}`}
                      class="rounded-sm border p-1 hover:bg-gray-100"
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        class="w-5 h-5"
                      >
                        <path d="M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z" />
                        <path d="m15 5 4 4" />
                      </svg>
                    </a>
                    {/* Delete Button */}
                    <button
                      type="button"
                      class="delete-btn rounded-sm border p-1 hover:bg-gray-100 text-gray-700"
                      data-id={data.id}
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        class="w-5 h-5"
                      >
                        <path d="M3 6h18" />
                        <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6" />
                        <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2" />
                        <line x1="10" x2="10" y1="11" y2="17" />
                        <line x1="14" x2="14" y1="11" y2="17" />
                      </svg>
                    </button>
                  </td>
                </tr>
              ))
            )
          }
        </tbody>
      </table>
    </div>
  </section>
</Layout>

<script>
  const deleteButtons = document.querySelectorAll(".delete-btn");

  deleteButtons.forEach((button) => {
    button.addEventListener("click", async function () {
      const id = this.getAttribute("data-id");

      const confirmed = confirm("Are you sure you want to delete this post?");
      if (confirmed) {
        try {
          const response = await fetch("/api/delete-post", {
            method: "DELETE",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ id }),
          });

          if (!response.ok) {
            const result = await response.json();
            console.error("Error deleting post:", result.message);
            alert("Error deleting post: " + result.message || "Unknown error.");
            return;
          }

          const result = await response.json();
          alert("Post deleted successfully!");
          window.location.reload();
        } catch (error) {
          console.error("Error deleting post:", error);
          alert("An error occurred. Please try again.");
        }
      }
    });
  });
</script>
